.\" @((#)diffyplot.1 06/22/90 JGB;
.TH DEQ 1 "22 June 1990"
.SH NAME
diffyplot \- differential equations plotter
.SH DESCRIPTION
.LP
deq is a graphics tool for the investigation of differential
equations.  The program is interactive, asking for either a system of
first-order equations or a higher-order equation, as well as the time
constraints and initial conditions.  The equation or system of
equations is parsed and a new c source file is generated, which then
must be compiled and run.  The resulting generated data is finally
piped into grtool.  Thus, a path to grtool must be available from your
current directory.
.SH STARTUP
.TP 10
deq
.SH PROMPTS
deq will prompt you for the necessary information in the
following format:
.TP 10
	Which do you want to enter, a (S)ystem of 1st-order eqns
.TP 10
				 or a (H)igher-order equation.
.TP 10
	Enter 's' or 'h': s
.TP 10
	Enter dimension of system: 3
.TP 10
	x[1]' = 10.0*(-x[1]+x[2])
.TP 10
	x[2]' = 28.0*x[1]-x[2]-x[1]*x[3]
.TP 10
	x[3]' = -2.66666666 * x[3] + x[1] * x[2]
.TP 10
	Enter initial conditions.
.TP 10
	x[0] = 5.0
.TP 10
	x[1] = 5.0
.TP 10
	x[2] = 5.O
.TP 10
	Enter another set of initial conditions? (y/n) n
.TP 10
	start time = 0
.TP 10
	end time = 20
.TP 10
	time step size = 0.01
.TP 10
	Plot what vs. what?
.TP 10
	x-axis (t or x[i]): x[1]
.TP 10
	y-axis (t, x[i], or a): x[2]

.LP
This is the famous Lorenz euqations, with an attractor. 
In this example, the x[i]s are related only in the way specified. But
in a higher-order equation, x[i] indicates the i-th derivative of x 
and x[0] = x.  Depending on the degree of the equation, a number of
initial conditions are taken.  Note that you can provide more than one
set of initial conditions.  They will be plotted on the same plot.  

The following c functions are supported: 

       sin, cos, tan, asin, acos, atan, atan2, sinh,
       cosh, tanh, exp, log, log10, pow, sqrt, fabs.  

The symbol '^' can also be used to indicate the power function.  The
variable 't' is the special character for time.

.SH Internals:

First, the equation is parsed and transformed into a system of
first-order equations (if it is not already in that form.)  Then this
system of equations is piped into another parser, which actually
generates the c source code.  This code is compiled and run,
generating the raw data, which is finally piped into grtool to come up
with a plot of the solution.   NOTE:  you must be in graphics mode to
run grtool. 
